{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","e","this","setState","target","value","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAIaA,EAAO,SAACC,GACpB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEL,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCNRC,G,MAAW,SAACR,GACxB,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACP,GAAD,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNVO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACxC,OACC,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCEG,E,kDAvCd,aAAe,IAAD,8BACb,gBAEKC,MAAQ,CACZR,SAAU,GACVS,YAAa,IAGd,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBARP,E,gDAWd,SAAaC,GACZC,KAAKC,SAAS,CAAEJ,YAAaE,EAAEG,OAAOC,U,+BAGvC,WAAqB,IAAD,OACnBC,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKP,SAAS,CAAEb,SAAUoB,S,oBAG7C,WAAU,IAAD,EAC0BR,KAAKJ,MAA/BR,EADA,EACAA,SAAUS,EADV,EACUA,YACZY,EAAmBrB,EAASsB,QAAO,SAAC5B,GAAD,OACxCA,EAAQG,KAAK0B,cAAcC,SAASf,EAAYgB,wBAEjD,OACC,sBAAKjC,UAAU,MAAf,UACC,oBAAIA,UAAU,UAAd,8BACA,cAAC,EAAD,CACCW,YAAY,qBACZC,aAAcQ,KAAKR,eAEpB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAlCNK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.81e1a365.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n\treturn (\r\n\t\t<div className=\"card-container\">\r\n\t\t\t<img\r\n\t\t\t\tsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n\t\t\t\talt=\"monster\"\r\n\t\t\t/>\r\n\t\t\t<h2>{props.monster.name}</h2>\r\n\t\t\t<p>{props.monster.email}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"../card/card.component\";\r\n\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = (props) => {\r\n\treturn (\r\n\t\t<div className=\"card-list\">\r\n\t\t\t{props.monsters.map((monster) => (\r\n\t\t\t\t<Card key={monster.id} monster={monster} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName=\"search\"\r\n\t\t\ttype=\"search\"\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tonChange={handleChange}\r\n\t\t/>\r\n\t);\r\n};\r\n","import \"./App.css\";\r\nimport { CardList } from \"./components/card-list/card-list.component\";\r\nimport { SearchBox } from \"./components/search-box/search-box.component\";\r\nimport { Component } from \"react\";\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tmonsters: [],\r\n\t\t\tsearchField: \"\",\r\n\t\t};\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tthis.setState({ searchField: e.target.value });\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((users) => this.setState({ monsters: users }));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { monsters, searchField } = this.state;\r\n\t\tconst filteredMonsters = monsters.filter((monster) =>\r\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<h1 className=\"heading\">Monsters Rolodex</h1>\r\n\t\t\t\t<SearchBox\r\n\t\t\t\t\tplaceholder=\"Search monsters...\"\r\n\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<CardList monsters={filteredMonsters}></CardList>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}